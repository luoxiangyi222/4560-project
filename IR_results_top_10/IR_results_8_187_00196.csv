id,text
29,"I think a lot of good points have already been made here but after taking a look at the existing questions, I really think people need to take a good hard look at this: Edit - I missed a few, and more just keep coming and coming... Guys, this is seriously awful.  We are just one day into the beta and out of 109 questions on the site, 22 of them (over 20%) are about which apps are ""good/bad/best"" - yikes! Worse, almost none of them are Community Wiki, so people are actually gaining rep for asking and answering the most mundane and subjective questions imaginable. I think this list very dramatically illustrates the problem with allowing these questions.  There's no end to them.  What's the best compass app?  What's the best flashlight app?  What's the best ukelele simulation app?  Gah! Is this what we're going to be, just a glorified review site?  Is it really that hard to just go to the market and read the reviews?  The Android developers have already built us this beautiful rating and review system that you can access right on your phone.  We don't need this fluff. Please, please, let's start closing these questions.  At the very least close them until we have moderators who can properly wikify them, but even then, I don't want to see people's 1-line recommendations taking up 20% of the site.  This is turning into a land grab with everybody wanting to own one of the big bad 500+ upvoted poll questions.  If we don't nip this in the bud, it's going to bite us hard later on. P.S. I'm not saying every question about an app is bad.  Here are two that are fine: In the first example, somebody is looking for a very specific app and has provided criteria to significantly narrow down the list of candidates.  In the second example, the author is asking for a comparison of two specific apps.  I see no problem with either of these. I just don't want to see two hundred ""Post your favourite [X] app"" polls by the time we hit public beta."
917,"The best you can really do currently is to create a new room and then invite the user to that room. You can also leave a link to the room as a comment on their post if you want. The automated chat link will also create a public room, so from that regard it's essentially the same (and you can give it whatever title you want). One downside is that the auto-inserted link will import the comments from the post into the chat room when it's created. Creating your own room beforehand will not do this, but if you are pre-emptively setting up a chat with someone then there is likely not going to be a long comment thread to import anyway, I'd imagine. This has also been discussed on Meta Stack Overflow."
443,"Despite what I just said, on Matthew Read's answer, I'd support merging ""Ubuntu"" and ""Linux"" -- if we aren't going to distinguish every single operating system by version (which sounds to me like crazy talk ... every Mac OS? Every Linux distro and release? Eeek.) there's no reason to break out Ubuntu from Linux."
886,"Nope.  Once you create a bounty, you lose that rep forever.  I think you used to be able to award it to yourself but it ""didn't count"", and now it's just the more sensible solution of not letting you award it to yourself at all. If someone else is able to help or independently discovers the same fix as you, you may want to consider giving them the bounty.  Otherwise just let it expire &mdash; if it does without you awarding it, half the rep will go to the highest-scoring answer if it's at +2 or more, if there is such an answer.  (If not, no one gets any.)"
867,"I'd be careful about merging the 'contacts' and 'people'. Isn't the app in HTC Sense called ""People""?  Also, 2.x and 3.x versions of Android are going to be around (and generating questions) for quite some time yet. I think Matthew Read's suggestion of creating ""contacts-app"" and ""people-app"" is a good one, although I don't think I'm in favor of making one a synonym of the other. They will at least offer a way to distinguish from questions about contacts in general."
763," Matthew Read answered: The main difference for me would be doing things vs creating work for the mods.  As a regular user I'd flag things; as a mod I'd just delete/close/etc.  As a regular user I'd post minor tag problems needing merging etc. to Meta; as a mod I just do what needs to be done.  In both roles you always take the major things to Meta regardless of your ability to deal with it.  Al Everett answered: I want to help a good core of high-reputation users basically self-manage the site. If everything is going well, then a moderator's job truly is to be an exception-handler, taking care of those few things that come up that a non-moderator just can't do. We have some really good users now, but we need some more.  eldarerathis answered: Honestly, I just kind of want to cut out the middle man. I find myself running into clearly off-topic questions or non-answers, constantly refreshing the review queue and such but...all I can do is flag (or edit)! I spend a lot of time ""moderating"" as it is, so I figured - why not volunteer to actually moderate? If I can use that time to be helpful in other ways, too, then all the better. I just legitimately enjoy maintaining the site and helping the community.  Bryan Denny answered: If I wasn't a mod, then I wouldn't be fixing the things myself. I'd just be flagging them for the current mods to do those things.  Skip an extra step :) But the only difference between the two is the mod has slightly stronger powers which should hopefully not have to be used  Flow answered: Moderation of the site. Asking for feedback on meta about suggestions and ideas that I think improve the overall site experience. But the last point is something that every user is able and encouraged to do, regardless of the mod status and reputation!"
2187,"A duplicate answer is an answer that does not add any information not alerady in an older answer. Note that the above text is only an example, but you need to provide the link to the original answer, if you want quicker mod action and/or don't want mods to search for a possibly long time to find the original answer because they have to do other things too and you are uselessly delaying them with that. At the bottom of every answer, just above the comment section, there are at least these 3 buttons: ""share"", ""edit"" and ""flag"" (if this isn't there you couldn't flag in the first place.) Then, go to the duplicate answer and do step 5 (or 5.2, if you managed to keep the flag window open all that time). A duplicate answer is a duplicate, no matter when it is posted. It just needs to be posted at least 1 second later than the original one in order to be recognizable as a duplicate."
2087,"Be specific If you ask a vague question, youâ€™ll get a vague answer. But if you give us details and context, we can provide a useful answer. I find this not precise. What details are we expecting from them? At least we should give them a hint as an example, either on same page or with links pointing to high quality questions or templates demonstrating what kind of minimum or recommended amount of information a question should have. There are users (like me) who doesn't pick up easily or do not understand what to pick up if you don't give them examples or even hints. That guideline lacks that crucial info. Following are the solutions scattered across this site or on other sites that I picked up: Unlike other sites, for first time users, this is what Stack Overflow shows to them (a mandatory read):  I don't think it would help us at all, given that Stack Overflow itself is far from solving the problem of unclear and low-quality question even after having this solution for years. Supplementary readings: Forget about readings, we have this approach discussed here: When asking a question, enforce user to read the FAQ first, and the most upvoted answer (from a moderator) notes: It won't work. Like we all do with EULAs, they'll tick the box without reading and keep going. If there's any fanciness like a timer or making sure they scroll the page, they'll just cheat it and still not read it. (Emphasis mine) It is interesting to note that the author of that answer was in favor of that solution when it was implemented long time ago on Stack Overflow. :D I personally too do not find this approach much useful for the same reason. The recently asked question Adding a template question to the Ask Question box seeks input on that regard. It has not received any counter argument as an answer, but neither a helpful answer that sketches out what needs to be there in a template. I find this approaching appealing simply because I couldn't find a way to confirm that it has no merit or less merit relative to other approaches. At first read, it appears to be useful since it can at least acknowledge  the poster the need to mention Android version, Device name, rooting status, among other things we need to sketch out. Note that it is not fine for us to seek such crucial details since posting a comment for such clarification is quite a waste of our time. Don't you agree? But since the given circumstances doesn't give any excuse to us, we're left with one option: to invest/waste our time on something which should've been there at first place. Like every other approach, there is no guarantee that it would work or significantly bring down the amount of time we end up wasting on such questions, but our aim should always be to do the best we can to solve the problem. We may not be able to eliminate it but we shouldn't just live with it either, unless all feasible solutions are considered. Forget it please! It has not stopped the wrath of NAA we receive, so better not be considered for implementation IMO. Note: You need to do some work now!"
1066,"I am undecided. This are two different things, although there are  very few  questions. I would let them separated for a while and see how things go."
1597,"Scripts can have accounts too. It would be easy for a spammer or other malicious user to sign in and then give control to his script. Having the possibility of a CAPTCHA for signed-in users prevents this attack. The system has a few ways to guess whether particular activity is from a genuine user. Full details aren't available to us end-users, because that would make the system too easy for attackers to defeat. One common way to make the check go wrong is to leave a page open for a long time before submitting the form; for example, you start to answer a question, then get interrupted, go to lunch, come back an hour later, finish answering the question, and then get the CAPTCHA when you try to post your answer. This is because of a token in the page that expires after some time."
