id,text
985,"I do agree that a little improvement needs to be performed on some of the lightest grey's used. I mainly use Firefox 13.0.1 under Ubuntu 12.04, and with my recently acquired ASUS VE228 LED Monitor, I have some trouble recognizing some of the lightest grey colors currently being used. Using Firebug, I've analyzed and collected some information regarding tags or classes that apply a light grey as a background color for a visual representation: #F4F4F4 is hard to see .post-tag class currently using #F4F4F4 This class is used on on regular tags. e.g., hard-to-see #F3F3F3 is hard to see code tag currently using #F3F3F3  This tag is used on inline code, when we wrap something around a `. e.g., I'm inline highlighted code pre tag currently using #F3F3F3 This tag is used when we either press ctrl + k or use the toolbar button . e.g., #F6F6F6 is hard to see, with considerations .owner class currently using #F6F6F6 This class is used for the background of a users signature. Note:
Since the rectangle for a user signature has a respectable size, it's easier to notice the color difference between the white background and the signature background. #EEEEEE works very well blockquote tag currently using #EEEEEE This tag is used when we either press ctrl + q or use the toolbar button . e.g., I'm a quote block In order to properly understand if this was an issue of my newly acquired monitor, or a overall situation, I've performed some tests (opening and navigating the  page) using difference OSâ€™s and monitors. Here's the conclusions: Windows XP Professional Version 2002 SP3 | ASUS VE228 LED Monitor Browsers used: Result obtained: equal results on all browsers My conclusion for the tests performed is that under optimal color calibration conditions, the light grey's used are hard to distinguish from the white background. It gets really hard when we're reading a paragraph with some inline code, because at first glance I can't spot it. The code-block fails only if we are reading a single line of code. When two or more lines are used, it is reasonable visible, just like the background color for the user signature. Windows 7 Home Edition SP1 | Toshiba Laptop - Satellite C660 (built-in monitor) Browsers used: Result obtained: equal results on all browsers My Toshiba doesn't have any color calibration applied, since I don't perform any graphical design with it. The sole purpose for this laptop is the test of work being developed, just like a client would see it, so, everything is by default across the system. Here, It appears to work well on all browsers on all colors tested. Naturally that the light grey is more like a blueish color than actually a tone from black-to-white. So I can't really rely on this as to a positive assessment, I'll consider it a false-positive. Every grey color currently used below the tone provided by #EEEEEE can't stand out if used on small areas. Some improvements are noted if used of considerably large areas. The #EEEEEE works well for calibrated an non calibrated working environments. Have the following colors updated to a slightly dark tone: This assessment was performed with a Linux tool called Agave. I've used the tool color piker and picked the colors from examples provided on this answer. Then, I've lowered the tone by one, and the result provided was far more visible then the one picked.  HTML color code is placed on the lower right side of the color rectangle Using Agave color picker on this image, I did get the correct code for each rectangle picked. There seems to be no distinction between the colors in use or proposed colors when placed side by side respectively. All three used colors side by side are visually equal. Same goes for the ones suggested. As a side note: one may consider using just one color to replace the three being used."
61,"Yes, I find QR links very useful, especially when there are no many barcode scanners around. However, There should be a standard for these ""Here is an App that will help"" posts, just so we aren't A) leaching images, B) not shutting out users who want to see the app without having to go to the market place. Below, I've listed the way I've been linking apps to answers, including how not to leach images (IMPORTANT) because we don't want to get in trouble, now do we? For QR images, I've been using the following method: 1) Find the app on (marketplace e.g. AppBrain) you want to share
 2) Find the QR Code button, and locate the QR code.
 3) Copy the URL of the QR code
 The URL is
 Which is basically  If you use the Image upload tool on the post answer, you can use the image URL to reupload the image to imgur.com
 That way, you get the right QR code, generated from a reliable source, and you don't steal bandwidth. 4) MAKE SURE YOU HREF LINK TO APPBRAIN AT THE SAME TIME
So annoying when you get a QR link, and no web reference to what it is (I'm not sure what other services use, I use AppBrain for a lot of my stuff, but if you know the marketplace URL, just go from step 3 and hardcode the charts.api link yourself) (Freehand circles)"
311,"I don't think that's necessary. For one thing it's not a change that would be all that universal. What use would, say, English.SE have for QR codes? Besides, the new web market puts QR codes right on the page. It's only a couple of clicks to get the URL for the image and add it to a message. "
60,"QR codes are great.  Just make sure to also make the images a link to what the QR code is pointing to (for people who are browsing this site on their phones). There is also an ASCII QR code generator, but not sure how well they'd work here."
572," :) Unlocking questions are on-topic when they're not carrier-specific like getting them to give you an unlock code -- questions need to be about Android. Unlocking and rooting have been ruled legal when the issue has come up in the States, I believe.  I don't know about other areas but it seems there should be no reason for us to avoid them."
